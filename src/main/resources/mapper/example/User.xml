<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="jim.yang.example.dao.IUserOperation">
    
    <sql id="pageHeader">
		<choose>
			<when test="_databaseId == 'mysql'">
			
			</when>
			<otherwise>
				<if test="page_start != null and page_end != null">    
					select * from (select a.*, rownum rn from (
				</if>
			</otherwise>
		</choose>
	</sql>
	
	<sql id="pageFooter">
		<choose>
			<when test="_databaseId  == 'mysql'">
				<if test="page_start_1 != null and page_limit != null">    
					limit ${page_start_1}, ${page_limit}
				</if>
			</when>
			<otherwise>
				<if test="page_start != null and page_end != null">
					) a where rownum &lt;= #{page_end}) where rn &gt;= #{page_start}
				</if>
			</otherwise>
		</choose>
	</sql>
	

	<select id="selectUserByID" parameterType="int" resultType="User">
	    select * from `user` where id = #{id}
	</select>
	
	<!-- 为了返回list 类型而定义的returnMap -->
	<resultMap type="User" id="resultListUser">
        <id column="id" property="id" />
        <result column="userName" property="userName" />
        <result column="userAge" property="userAge" />
        <result column="userAddress" property="userAddress" />
    </resultMap>
	
	<!-- 返回list 的select 语句，注意 resultMap 的值是指向前面定义好的 -->
	<select id="selectUsers" parameterType="string" resultMap="resultListUser">
	    select * from user where userName like #{userName}
	</select>
	
	
	
	<!-- User 联合文章进行查询 方法之一的配置 (多对一的方式)  -->	
	<resultMap id="resultUserArticleList" type="Article">
	    <id property="id" column="aid" />
	    <result property="title" column="title" />
	    <result property="content" column="content" />
	    
	    <association property="user" javaType="User">
	        <id property="id" column="id" />
	        <result property="userName" column="userName" />
	        <result property="userAddress" column="userAddress" />	        
	    </association>	    
	</resultMap>
	
	<!-- User 联合文章进行查询 方法之二的配置 (多对一的方式) -->	
	<resultMap id="resultUserArticleList-2" type="Article">
	    <id property="id" column="aid" />
	    <result property="title" column="title" />
	    <result property="content" column="content" />	    
	    <association property="user" javaType="User" resultMap="resultListUser" />	         
	</resultMap>
	
	<select id="getUserArticles" parameterType="int" resultMap="resultUserArticleList">
	   select user.id,user.userName,user.userAddress,article.id aid,article.title,article.content from user,article 
	          where user.id=article.userid and user.id=#{id}
	</select>
	
	<select id="selectList" resultType="map">
		<include refid="pageHeader"/>
		select 
		<foreach collection="param.keys" item="key" index="idx" open="" separator="," close="">
			a.${key} as "${key}"
		</foreach>
		from ${tbl_name} a
		where 1 = 1
		<foreach collection="param.keys" item="key" index="idx" open="" separator="" close="">
			<if test="param[key] != null and param[key] != ''">    
				<choose>
					<when test="key == 'patient_name'">
						and ${key} like '%${param[key]}%'
					</when>
					<otherwise>
						and ${key} = '${param[key]}'
					</otherwise>
				</choose>
			</if>
		</foreach>
		<if test="sortname != null and sortname != ''">
			order by a.${sortname} ${sortorder}
		</if>
	    <include refid="pageFooter"/>
	</select>
	
	
	
	<!--执行增加操作的SQL语句。id和parameterType  
       分别与IUserOperation接口中的addUser方法的名字和  
       参数类型一致。以#{name}的形式引用Student参数  
       的name属性，MyBatis将使用反射读取Student参数  
       的此属性。#{name}中name大小写敏感。引用其他  
       的gender等属性与此一致。seGeneratedKeys设置  
       为"true"表明要MyBatis获取由数据库自动生成的主  
       键；keyProperty="id"指定把获取到的主键值注入  
       到Student的id属性--> 
    <insert id="addUser" parameterType="User" 
        useGeneratedKeys="true" keyProperty="id"> 
        insert into user(userName,userAge,userAddress)  
             values(#{userName},#{userAge},#{userAddress})  
    </insert>
    
    <update id="updateUser" parameterType="User" >
        update user set userName=#{userName},userAge=#{userAge},userAddress=#{userAddress} where id=#{id}
    </update>
    
    <delete id="deleteUser" parameterType="int">
        delete from user where id=#{id}
    </delete>
    
</mapper>